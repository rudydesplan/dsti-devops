name: avocado_compose_on_k8s

on:
  push:
    branches:
      - deploy/compose_on_k8s
  pull_request:
    branches:
      - deploy/compose_on_k8s
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: dsti
    AZURE_CONTAINER_REGISTRY: avocadocontainerregistry
    CONTAINER_NAME: avocadocontainer_compose_k8s
    CLUSTER_RESOURCE_GROUP: dsti
    CLUSTER_NAME: avocadocluster_compose_k8s
    DOCKER_COMPOSE_FILE: ./docker-compose.yml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Login to ACR
              run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.5.0
            - name: Cache Docker layers
              uses: actions/cache@v2.1.8
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-buildx-
            - name: Build and push Docker image
              uses: docker/build-push-action@v4.0.0
              with:
                context: ./flask-api
                file: ./flask-api/Dockerfile
                push: true
                tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
    deploy_on_k8s:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - name: Install Kompose and kubectl
              run: |
                curl -L https://github.com/kubernetes/kompose/releases/download/v1.24.0/kompose-linux-amd64 -o kompose
                chmod +x kompose
                sudo mv ./kompose /usr/local/bin/kompose

                curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
                chmod +x kubectl
                sudo mv ./kubectl /usr/local/bin/kubectl
            - name: Convert Docker Compose to Kubernetes resources
              run: kompose convert -f ${{ env.DOCKER_COMPOSE_FILE }} -o k8s-resources.yaml
            - name: Deploy Kubernetes resources
              run: kubectl apply -f k8s-resources.yaml -n avocado
