name: avocado
"on":
    push:
        branches:
            - main
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: dsti
    AZURE_CONTAINER_REGISTRY: avocadocontainerregistry
    CLUSTER_RESOURCE_GROUP: dsti2
    CLUSTER_NAME: avocado_k8s
    CONTAINER_NAME: avocado_k8s_container
    DEPLOYMENT_MANIFEST_PATH: ./avocado-api.yaml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Login to ACR
              run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.5.0
            - name: Cache Docker layers
              uses: actions/cache@v2.1.8
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-buildx-
            - name: Build and push Docker image
              uses: docker/build-push-action@v4.0.0
              with:
                context: ./flask-api
                file: ./flask-api/Dockerfile
                push: true
                tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}
                manifests: ./avocado-api.yaml
                namespace: avocado
