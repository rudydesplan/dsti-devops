name: avocado
"on":
    push:
        branches:
            - main
    workflow_dispatch: {}
env:
    ACR_RESOURCE_GROUP: dsti
    AZURE_CONTAINER_REGISTRY: avocadocontainerregistry
    CLUSTER_RESOURCE_GROUP: dsti2
    CLUSTER_NAME: avocado_k8s
    CONTAINER_NAME: avocado-k8s-container
    DEPLOYMENT_MANIFEST_PATH: ./avocado-api.yaml
jobs:
    buildImage:
        permissions:
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - name: Login to ACR
              run: az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2.5.0
            - name: Cache Docker layers
              uses: actions/cache@v2.1.8
              with:
                path: /tmp/.buildx-cache
                key: ${{ runner.os }}-buildx-${{ github.sha }}
                restore-keys: |
                  ${{ runner.os }}-buildx-
            - name: Build and push Docker image
              uses: docker/build-push-action@v4.0.0
              with:
                context: ./flask-api
                file: ./flask-api/Dockerfile
                push: true
                tags: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}
                cache-from: type=local,src=/tmp/.buildx-cache
                cache-to: type=local,dest=/tmp/.buildx-cache
    deploy:
        permissions:
            actions: read
            contents: read
            id-token: write
        runs-on: ubuntu-latest
        needs:
            - buildImage
        steps:
            - uses: actions/checkout@v3
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}
            - uses: azure/use-kubelogin@v1
              name: Set up kubelogin for non-interactive login
              with:
                kubelogin-version: v0.0.25
            - uses: azure/aks-set-context@v3
              name: Get K8s context
              with:
                admin: "false"
                cluster-name: ${{ env.CLUSTER_NAME }}
                resource-group: ${{ env.CLUSTER_RESOURCE_GROUP }}
                use-kubelogin: "true"
            - name: Download and extract Istio
              run: |
                ISTIO_VERSION=1.17.2
                echo "ISTIO_VERSION=$ISTIO_VERSION" >> $GITHUB_ENV
                curl -L https://istio.io/downloadIstio | ISTIO_VERSION=${ISTIO_VERSION} sh -
            - name: Install Istio
              run: |
                cd istio-1.17.2
                ./bin/istioctl install --set profile=demo -y
            - name: Install Helm
              run: |
                curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
                chmod 700 get_helm.sh
                ./get_helm.sh
            - name: Define public Kubernetes chart repository in the Helm configuration
              run: |
                helm repo add prometheus-community https://prometheus-community.github.io/helm-charts
                helm repo update
                # Check if the 'prometheus' namespace exists and create it if it doesn't
                kubectl get ns prometheus || kubectl create ns prometheus
                helm install prometheus prometheus-community/kube-prometheus-stack -n prometheus
            - uses: azure/login@v1.4.3
              name: Azure login
              with:
                creds: ${{ secrets.AZURE_CREDENTIALS }}    
            - name: Log in to Azure Container Registry
              run: |
                az acr login --name ${{ env.AZURE_CONTAINER_REGISTRY }}    
            - uses: Azure/k8s-deploy@v4
              name: Deploys application
              with:
                action: deploy
                images: ${{ env.AZURE_CONTAINER_REGISTRY }}.azurecr.io/${{ env.CONTAINER_NAME }}
                manifests: ./avocado-api.yaml
                namespace: avocado
